#include <iostream>
#include<cstdio>
#include<cstring>
using namespace std;
#define  ll long long
const int maxn=1e5+5;
int  cnt;
struct node
{
    int to;
    int next;
}edge[maxn<<1];
int head[maxn];
int degree[maxn];
ll sum;
ll n;
void add(int u,int v)
{
    edge[cnt].to=v;
    edge[cnt].next=head[u];
    head[u]=cnt++;
}
void dfs(int now,int fa,int step)
{
    if(step>=2)
        sum++;
        ll  ans=0;
    for(int i=head[now];i!=-1;i=edge[i].next)
    {

        int v=edge[i].to;
        if(v!=fa)
        { ans++;
              sum=sum+(n-(degree[now]+degree[v]));
               //printf("   %d\n",sum);
              dfs(v,now,step+1);
        }
    }
//printf("QQQ   %d\n",ans);
    if(ans>=2)
    sum+=ans*(ans-1)/2;

}
int main()
{

    int a,b;
    scanf("%lld",&n);
    memset(head,-1,sizeof(head));
    memset(degree,0,sizeof(degree));
    sum=0;
    for(int i=0;i<n-1;i++)
    {
        scanf("%d  %d",&a,&b);
        add(a,b);
        add(b,a);
        degree[a]++;
        degree[b]++;
    }
    dfs(1,0,0);
    ll tt;
    tt=n*(n-1)*(n-2)/6;
    printf("%lld\n",tt-sum);
    return 0;
}
