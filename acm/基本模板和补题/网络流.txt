#include<bits/stdc++.h>
#define ll long long
using namespace std;
const int MAXN=1510;
const int inf=1e9+7;
struct node{
    int to,nex,cap;
}edge[MAXN];
int head[MAXN*2];
int cnt;
int vis[MAXN];
int n,m;
void add(int u,int v,int w){
    edge[cnt].to=v;
    edge[cnt].cap=w;
    edge[cnt].nex=head[u];
    head[u]=cnt++;
}
queue<int>Q;
int bfs(){
    memset(vis,-1,sizeof(vis));
    while(!Q.empty())   Q.pop();
    Q.push(1);
    vis[1]=1;
    while(!Q.empty()){
        int nx=Q.front();
        Q.pop();
        for(int i=head[nx];i!=-1;i=edge[i].nex){
                int v=edge[i].to;
                int w=edge[i].cap;
            if(vis[v]<0&&w){
                vis[v]=vis[nx]+1;
                Q.push(v);
            }
        }
    }
    return  vis[n]!=-1;
}
int dfs(int u,int w){
    if(u==n)  return w;
    int ans=0;
    for(int i=head[u];i!=-1&&ans<w;i=edge[i].nex){
        if(vis[edge[i].to]==vis[u]+1&&edge[i].cap){
            int b=dfs(edge[i].to,min(w-ans,edge[i].cap));
            edge[i].cap-=b;
            edge[i^1].cap+=b;
            ans+=b;
        }
    }
    return ans;
}
int main(){
    int T,cas=1;
    scanf("%d",&T);
    while(T--){
        scanf("%d %d",&n,&m);
        int a,b,w;
        cnt=0;
        memset(head,-1,sizeof(head));
        for(int i=1;i<=m;i++){
            scanf("%d %d %d",&a,&b,&w);
            add(a,b,w);
            add(b,a,0);
        }
        int ans=0;
        while(bfs())
            ans+=dfs(1,inf);
        printf("Case %d: %d\n",cas++,ans);
    }
    return 0;
}